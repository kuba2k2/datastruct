#  Copyright (c) Kuba Szczodrzy≈Ñski 2024-10-12.

import pytest
from base import TestBase, TestData
from test_tls_structs import *

TEST_DATA = [
    pytest.param(
        TestData(
            data=(
                b"\x17\x03\x03\x00\x22\xb8\x7a\x2b\x56\x5c\x56\xde\xce\x51\x6c\xe7"
                b"\x60\xc6\x6d\xcc\xbb\xc2\xca\x71\x5d\xa3\x93\x96\x33\xfc\xd8\xed"
                b"\x3f\xb6\x2b\xef\x16\x49\xa0"
            ),
            obj_full=TlsRecord(
                type=TlsRecord.Type.APPLICATION_DATA,
                version=TlsVersion.TLSv1_2,
                length=34,
                data=(
                    b"\xb8\x7a\x2b\x56\x5c\x56\xde\xce\x51\x6c\xe7\x60\xc6\x6d\xcc\xbb"
                    b"\xc2\xca\x71\x5d\xa3\x93\x96\x33\xfc\xd8\xed\x3f\xb6\x2b\xef\x16"
                    b"\x49\xa0"
                ),
            ),
        ),
        id="tls_data",
    ),
    pytest.param(
        TestData(
            data=(
                b"\x16\x03\x03\x01\x7e\x01\x00\x01\x7a\x03\x03\xa7\x0f\xc2\x76\x65"
                b"\xa7\x18\xfb\x88\xe9\x93\x97\x2b\x02\x70\x1b\x10\xf3\x32\x05\xb8"
                b"\x8a\x5c\xe8\x4d\x33\xad\xa3\x55\xdf\xaa\x54\x20\x71\x79\x89\xf3"
                b"\x72\xa9\x5c\x95\x7c\xc0\x9a\x2f\xc1\x39\xab\x4b\x77\xbf\x71\x90"
                b"\xee\x6d\xba\x84\x83\x87\xe0\x6b\x30\x39\x9e\xf9\x00\x26\xc0\x2b"
                b"\xc0\x2f\xc0\x2c\xc0\x30\xcc\xa9\xcc\xa8\xc0\x09\xc0\x13\xc0\x0a"
                b"\xc0\x14\x00\x9c\x00\x9d\x00\x2f\x00\x35\xc0\x12\x00\x0a\x13\x01"
                b"\x13\x02\x13\x03\x01\x00\x01\x0b\x00\x00\x00\x15\x00\x13\x00\x00"
                b"\x10\x61\x70\x69\x2e\x77\x61\x6b\x61\x74\x69\x6d\x65\x2e\x63\x6f"
                b"\x6d\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\x0a\x00\x0a\x00\x08"
                b"\x00\x1d\x00\x17\x00\x18\x00\x19\x00\x0b\x00\x02\x01\x00\x00\x0d"
                b"\x00\x1a\x00\x18\x08\x04\x04\x03\x08\x07\x08\x05\x08\x06\x04\x01"
                b"\x05\x01\x06\x01\x05\x03\x06\x03\x02\x01\x02\x03\xff\x01\x00\x01"
                b"\x00\x00\x17\x00\x00\x00\x10\x00\x0e\x00\x0c\x02\x68\x32\x08\x68"
                b"\x74\x74\x70\x2f\x31\x2e\x31\x00\x12\x00\x00\x00\x2b\x00\x05\x04"
                b"\x03\x04\x03\x03\x00\x33\x00\x8b\x00\x89\x00\x19\x00\x85\x04\x00"
                b"\xd2\xbd\xd4\x25\xc3\x68\x78\xb0\x02\x20\xaa\xf3\x07\xe7\x16\xca"
                b"\x10\x8b\x56\x43\x47\x89\x47\x4a\xaf\x65\x0f\x61\xe1\x58\x9d\x72"
                b"\xb9\x80\x85\x6e\xd8\xfd\x98\x2b\x21\x6c\x49\xb6\xb7\x6f\x14\xc2"
                b"\x39\x8e\x9d\x23\x12\x1a\xc8\xa2\x5b\xff\x52\x9a\x08\x50\xd4\x44"
                b"\xfe\x01\x64\xd2\xa6\x09\x99\xc6\x97\xce\x3e\xab\xdf\x6d\x39\x3c"
                b"\x99\x16\x9a\x93\x47\x02\x6c\xd5\xbb\x87\x5b\xbd\xe4\x33\xda\x17"
                b"\xd0\x35\x65\x5c\x07\x52\x58\xdb\xb0\xfb\xcd\x4e\xb7\x5c\xea\xd7"
                b"\x8a\xd7\xa7\xdb\x40\xcd\xe4\xd4\xde\x98\x36\x0b\xca\xf1\xd0\xd5"
                b"\xe7\xaf\x18"
            ),
            obj_full=TlsRecord(
                type=TlsRecord.Type.HANDSHAKE,
                version=TlsVersion.TLSv1_2,
                length=382,
                data=TlsHandshake(
                    type=TlsHandshake.Type.CLIENT_HELLO,
                    length=378,
                    data=TlsHandshakeHello(
                        version=TlsVersion.TLSv1_2,
                        random=(
                            b"\xa7\x0f\xc2\x76\x65\xa7\x18\xfb"
                            b"\x88\xe9\x93\x97\x2b\x02\x70\x1b"
                            b"\x10\xf3\x32\x05\xb8\x8a\x5c\xe8"
                            b"\x4d\x33\xad\xa3\x55\xdf\xaa\x54"
                        ),
                        session_id_length=32,
                        session_id=(
                            b"\x71\x79\x89\xf3\x72\xa9\x5c\x95"
                            b"\x7c\xc0\x9a\x2f\xc1\x39\xab\x4b"
                            b"\x77\xbf\x71\x90\xee\x6d\xba\x84"
                            b"\x83\x87\xe0\x6b\x30\x39\x9e\xf9"
                        ),
                        cipher_suites_length=38,
                        cipher_suites=[
                            49195,
                            49199,
                            49196,
                            49200,
                            52393,
                            52392,
                            49161,
                            49171,
                            49162,
                            49172,
                            156,
                            157,
                            47,
                            53,
                            49170,
                            10,
                            4865,
                            4866,
                            4867,
                        ],
                        compression_methods_length=1,
                        compression_methods=[0],
                        extensions_length=267,
                        extensions=[
                            TlsExtension(
                                type=0,
                                length=21,
                                data=TlsExtension.ServerName(
                                    names_length=19,
                                    names=[
                                        TlsExtension.ServerName.Name(
                                            type=0,
                                            length=16,
                                            value="api.wakatime.com",
                                        )
                                    ],
                                ),
                            ),
                            TlsExtension(
                                type=5, length=5, data=b"\x01\x00\x00\x00\x00"
                            ),
                            TlsExtension(
                                type=10,
                                length=10,
                                data=b"\x00\x08\x00\x1d\x00\x17\x00\x18\x00\x19",
                            ),
                            TlsExtension(type=11, length=2, data=b"\x01\x00"),
                            TlsExtension(
                                type=13,
                                length=26,
                                data=(
                                    b"\x00\x18\x08\x04\x04\x03\x08\x07"
                                    b"\x08\x05\x08\x06\x04\x01\x05\x01"
                                    b"\x06\x01\x05\x03\x06\x03\x02\x01"
                                    b"\x02\x03"
                                ),
                            ),
                            TlsExtension(type=65281, length=1, data=b"\x00"),
                            TlsExtension(type=23, length=0, data=b""),
                            TlsExtension(
                                type=16,
                                length=14,
                                data=b"\x00\x0c\x02h2\x08http/1.1",
                            ),
                            TlsExtension(type=18, length=0, data=b""),
                            TlsExtension(
                                type=43, length=5, data=b"\x04\x03\x04\x03\x03"
                            ),
                            TlsExtension(
                                type=51,
                                length=139,
                                data=(
                                    b"\x00\x89\x00\x19\x00\x85\x04\x00"
                                    b"\xd2\xbd\xd4\x25\xc3\x68\x78\xb0"
                                    b"\x02\x20\xaa\xf3\x07\xe7\x16\xca"
                                    b"\x10\x8b\x56\x43\x47\x89\x47\x4a"
                                    b"\xaf\x65\x0f\x61\xe1\x58\x9d\x72"
                                    b"\xb9\x80\x85\x6e\xd8\xfd\x98\x2b"
                                    b"\x21\x6c\x49\xb6\xb7\x6f\x14\xc2"
                                    b"\x39\x8e\x9d\x23\x12\x1a\xc8\xa2"
                                    b"\x5b\xff\x52\x9a\x08\x50\xd4\x44"
                                    b"\xfe\x01\x64\xd2\xa6\x09\x99\xc6"
                                    b"\x97\xce\x3e\xab\xdf\x6d\x39\x3c"
                                    b"\x99\x16\x9a\x93\x47\x02\x6c\xd5"
                                    b"\xbb\x87\x5b\xbd\xe4\x33\xda\x17"
                                    b"\xd0\x35\x65\x5c\x07\x52\x58\xdb"
                                    b"\xb0\xfb\xcd\x4e\xb7\x5c\xea\xd7"
                                    b"\x8a\xd7\xa7\xdb\x40\xcd\xe4\xd4"
                                    b"\xde\x98\x36\x0b\xca\xf1\xd0\xd5"
                                    b"\xe7\xaf\x18"
                                ),
                            ),
                        ],
                    ),
                ),
            ),
        ),
        id="tls_client_hello",
    ),
    pytest.param(
        TestData(
            data=(
                b"\x16\x03\x03\x00\xdf\x02\x00\x00\xdb\x03\x03\xc9\xe8\x60\x6c\xd5"
                b"\x71\x68\x28\xef\x70\x6c\x02\x91\xd2\x7f\x7e\xf0\x91\xc4\x31\xdc"
                b"\x82\x73\x8c\x78\x09\x6a\xf9\xba\xe3\x1d\x98\x20\x71\x79\x89\xf3"
                b"\x72\xa9\x5c\x95\x7c\xc0\x9a\x2f\xc1\x39\xab\x4b\x77\xbf\x71\x90"
                b"\xee\x6d\xba\x84\x83\x87\xe0\x6b\x30\x39\x9e\xf9\x13\x02\x00\x00"
                b"\x93\x00\x2b\x00\x02\x03\x04\x00\x33\x00\x89\x00\x19\x00\x85\x04"
                b"\x01\x06\x7e\x15\xbc\x80\x5b\xd1\x91\xe0\xb1\x46\x67\x99\xad\xed"
                b"\x21\x68\xd8\x14\x85\x7f\x08\xcf\x76\x58\x70\x00\xed\xf4\xcd\x43"
                b"\x59\xf7\xde\xd5\x12\xa1\x09\x3b\xd5\xcf\xa9\xfd\xf4\x5d\xc6\x2f"
                b"\x80\x7b\x1a\x77\x0d\x7c\x0e\x9a\x71\x52\x2f\x19\x91\x8b\x17\x35"
                b"\xa6\x1a\x00\x3d\x65\x0d\xd7\xb6\xb8\x92\x39\x28\x57\x2f\x46\x7a"
                b"\x00\x6d\xb8\x8c\x09\x83\xaa\xab\x67\xb9\x25\x3d\xc5\x42\x87\x4d"
                b"\x04\xb5\x7d\xa8\x78\xf7\x86\xb7\x68\xa1\x42\x03\x82\xf6\x97\x08"
                b"\x6e\x13\x5e\x27\xdc\x5c\x78\xaf\x38\x1a\x9f\x89\x14\x8d\xb9\xba"
                b"\x2e\xde\x90\x8d"
            ),
            obj_full=TlsRecord(
                type=TlsRecord.Type.HANDSHAKE,
                version=TlsVersion.TLSv1_2,
                length=223,
                data=TlsHandshake(
                    type=TlsHandshake.Type.SERVER_HELLO,
                    length=219,
                    data=TlsHandshakeHello(
                        version=TlsVersion.TLSv1_2,
                        random=(
                            b"\xc9\xe8\x60\x6c\xd5\x71\x68\x28"
                            b"\xef\x70\x6c\x02\x91\xd2\x7f\x7e"
                            b"\xf0\x91\xc4\x31\xdc\x82\x73\x8c"
                            b"\x78\x09\x6a\xf9\xba\xe3\x1d\x98"
                        ),
                        session_id_length=32,
                        session_id=(
                            b"\x71\x79\x89\xf3\x72\xa9\x5c\x95"
                            b"\x7c\xc0\x9a\x2f\xc1\x39\xab\x4b"
                            b"\x77\xbf\x71\x90\xee\x6d\xba\x84"
                            b"\x83\x87\xe0\x6b\x30\x39\x9e\xf9"
                        ),
                        cipher_suites_length=2,
                        cipher_suites=[4866],
                        compression_methods_length=1,
                        compression_methods=[0],
                        extensions_length=147,
                        extensions=[
                            TlsExtension(type=43, length=2, data=b"\x03\x04"),
                            TlsExtension(
                                type=51,
                                length=137,
                                data=(
                                    b"\x00\x19\x00\x85\x04\x01\x06\x7e"
                                    b"\x15\xbc\x80\x5b\xd1\x91\xe0\xb1"
                                    b"\x46\x67\x99\xad\xed\x21\x68\xd8"
                                    b"\x14\x85\x7f\x08\xcf\x76\x58\x70"
                                    b"\x00\xed\xf4\xcd\x43\x59\xf7\xde"
                                    b"\xd5\x12\xa1\x09\x3b\xd5\xcf\xa9"
                                    b"\xfd\xf4\x5d\xc6\x2f\x80\x7b\x1a"
                                    b"\x77\x0d\x7c\x0e\x9a\x71\x52\x2f"
                                    b"\x19\x91\x8b\x17\x35\xa6\x1a\x00"
                                    b"\x3d\x65\x0d\xd7\xb6\xb8\x92\x39"
                                    b"\x28\x57\x2f\x46\x7a\x00\x6d\xb8"
                                    b"\x8c\x09\x83\xaa\xab\x67\xb9\x25"
                                    b"\x3d\xc5\x42\x87\x4d\x04\xb5\x7d"
                                    b"\xa8\x78\xf7\x86\xb7\x68\xa1\x42"
                                    b"\x03\x82\xf6\x97\x08\x6e\x13\x5e"
                                    b"\x27\xdc\x5c\x78\xaf\x38\x1a\x9f"
                                    b"\x89\x14\x8d\xb9\xba\x2e\xde\x90"
                                    b"\x8d"
                                ),
                            ),
                        ],
                    ),
                ),
            ),
        ),
        id="tls_server_hello",
    ),
    pytest.param(
        TestData(
            data=b"\x14\x03\x03\x00\x01\x01",
            obj_full=TlsRecord(
                type=TlsRecord.Type.CHANGE_CIPHER_SPEC,
                version=TlsVersion.TLSv1_2,
                length=1,
                data=b"\x01",
            ),
        ),
        id="tls_change_cipher_spec",
    ),
    pytest.param(
        TestData(
            data=(
                b"\x15\x03\x03\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x20\x85\x7e\x51"
                b"\xe6\x1b\x07\x94\xb7\x29\x8b\x47\xbe\x05\x0d\xff\x61\x7b\x88"
            ),
            obj_full=TlsRecord(
                type=TlsRecord.Type.ALERT,
                version=TlsVersion.TLSv1_2,
                length=26,
                data=(
                    b"\x00\x00\x00\x00\x00\x00\x00\x20\x85\x7e\x51\xe6\x1b\x07\x94\xb7"
                    b"\x29\x8b\x47\xbe\x05\x0d\xff\x61\x7b\x88"
                ),
            ),
        ),
        id="tls_encrypted_alert",
    ),
    pytest.param(
        TestData(
            cls=TlsRecord,
            data=b"\x16\x03\x03\x00\x04\x0e\x00\x00\x00",
            obj_full=None,
        ),
        id="tls_server_hello_done",
    ),
]


@pytest.mark.parametrize("test", TEST_DATA)
class TestTls(TestBase):
    pass


del TestBase
